# Importa as Bibliotecas
import streamlit as st
import base64
import requests
from io import BytesIO
from googletrans import Translator
import sys
import os

# Adiciona o diretÃ³rio 'page' ao caminho de pesquisa do Python
sys.path.append(os.path.join(os.path.dirname(__file__), 'page'))

# Importa as pÃ¡ginas
from data import data
from graphs import graphs
from green_hydrogen_predict import green_hydrogen_predict
from result_table import results

# ConfiguraÃ§Ã£o da pÃ¡gina
st.set_page_config(
    page_title="Home",
    page_icon=":earth_americas:",
    layout="wide"
)

# FunÃ§Ã£o para carregar a imagem de uma URL e convertÃª-la em base64
def load_flag_image_from_url(url):
    response = requests.get(url)
    if response.status_code == 200:
        img = BytesIO(response.content)
        return base64.b64encode(img.read()).decode()
    else:
        st.error("Erro ao carregar a imagem.")
        return None

# URLs das imagens das bandeiras
us_flag_url = "https://cdn-icons-png.flaticon.com/256/940/940207.png"  # URL da bandeira dos EUA
br_flag_url = "https://cdn-icons-png.flaticon.com/512/206/206597.png"  # URL da bandeira do Brasil

# Carregar as bandeiras das URLs
us_flag_base64 = load_flag_image_from_url(us_flag_url)
br_flag_base64 = load_flag_image_from_url(br_flag_url)

# FunÃ§Ã£o para definir o idioma
def set_language(language):
    st.session_state.language = language

# Inicializar o estado do idioma, se nÃ£o estiver configurado
if 'language' not in st.session_state:
    st.session_state.language = 'pt'  # PadrÃ£o Ã© portuguÃªs

# Layout para as bandeiras e troca de idioma no canto superior direito
col1, col2, col3 = st.columns([8, 0.4, 1])  # Diminuindo o espaÃ§o entre as colunas

with col2:  # Alterando ordem para exibir US primeiro
    if st.button("ğŸ‡ºğŸ‡¸"):  # BotÃ£o da bandeira dos EUA
        set_language('en')
    
with col3:
    if st.button("ğŸ‡§ğŸ‡·"):  # BotÃ£o da bandeira brasileira
        set_language('pt')

# Inicializar o estado da pÃ¡gina, se nÃ£o estiver configurado
if 'current_page' not in st.session_state:
    st.session_state.current_page = 'home'  # PadrÃ£o Ã© a pÃ¡gina inicial

# FunÃ§Ã£o para definir a pÃ¡gina atual
def set_page(page_name):
    st.session_state.current_page = page_name

# FunÃ§Ã£o principal que contÃ©m o restante do cÃ³digo
def home():
    # Texto em portuguÃªs (original)
    titulo_pt = "Modelo MatemÃ¡tico Preditivo para HidrogÃªnio Verde"
    descricao_pt = "Site interativo onde os usuÃ¡rios inserem dados como irradiÃ¢ncia solar, temperatura ambiente, eficiÃªncia do mÃ³dulo fotovoltaico, e a quantidade de energia que desejam converter em hidrogÃªnio."

    # Texto em inglÃªs (traduzido)
    titulo_en = "Predictive Mathematical Model for Green Hydrogen"
    descricao_en = "Interactive site where users enter data such as solar irradiance, ambient temperature, photovoltaic module efficiency, and the amount of energy they want to convert into hydrogen."

    # Verificar o idioma atual e definir o conteÃºdo corretamente
    if st.session_state.language == 'en':
        titulo = titulo_en
        descricao = descricao_en
    else:
        titulo = titulo_pt
        descricao = descricao_pt

    # Exibir o tÃ­tulo e descriÃ§Ã£o
    st.title(titulo)
    st.write(descricao)

# Sidebar com botÃµes para navegaÃ§Ã£o
st.sidebar.header("Menu" if st.session_state.language == 'pt' else "Menu")

# Verificar o idioma e redirecionar para a funÃ§Ã£o correta da pÃ¡gina
if st.sidebar.button("InÃ­cio" if st.session_state.language == 'pt' else "Home"):
    if st.session_state.current_page != 'home':
        set_page('home')

if st.sidebar.button("Dados" if st.session_state.language == 'pt' else "Data"):
    set_page('data')

if st.sidebar.button("PrediÃ§Ã£o de HidrogÃªnio Verde" if st.session_state.language == 'pt' else "Green Hydrogen Prediction"):
    set_page('green_hydrogen')

if st.sidebar.button("GrÃ¡ficos" if st.session_state.language == 'pt' else "Graphs"):
    set_page('graphs')

if st.sidebar.button("Resultados" if st.session_state.language == 'pt' else "Results"):
    set_page('results')

# Verificar qual pÃ¡gina deve ser exibida
if st.session_state.current_page == 'home':
    home()
elif st.session_state.current_page == 'data':
    data()
elif st.session_state.current_page == 'green_hydrogen':
    green_hydrogen_predict()
elif st.session_state.current_page == 'graphs':
    graphs()
elif st.session_state.current_page == 'results':
    results()
